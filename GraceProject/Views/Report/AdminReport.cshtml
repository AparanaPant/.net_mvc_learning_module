@model GraceProject.Models.Report

@{
    ViewData["Title"] = "Admin Report";
    Layout = "~/Views/Shared/_StudentLayout.cshtml";
}

<div class="container mt-5">
    <h2 class="mb-4 text-center">Admin Report</h2>

    <!-- Search Form -->
    <div class="row mb-4">
        <!-- Search Type -->
        <div class="col-md-3">
            <label for="searchType" class="form-label">Search By</label>
            <select id="searchType" class="form-control">
                <option value="student">Student Name</option>
                <option value="course">Course Name</option>
                <option value="educator">Educator Name</option>
            </select>
        </div>

        <!-- Search Value -->
        <div class="col-md-3">
            <label for="searchValue" class="form-label">Value</label>
            <input type="text" id="searchValue" class="form-control" placeholder="Type to search..." />
            <input type="hidden" id="selectedId">
        </div>

        <!-- Search For Dropdown -->
        <div class="col-md-3">
            <label for="searchFor" class="form-label">Search For</label>
            <select id="searchFor" class="form-control">
                <option value="">Please select</option>
            </select>
        </div>

        <!-- Dynamic Dropdown for Sessions -->
        <div class="col-md-3">
            <label for="dynamicDropdown" class="form-label">Select Session</label>
            <select id="dynamicDropdown" class="form-control">
                <option value="">Please select</option>
            </select>
        </div>

        <!-- Search Button -->
        <div class="col-md-3 mt-2">
            <button id="searchBtn" class="btn btn-primary w-100">Search</button>
        </div>
    </div>

    <!-- Placeholder for Results -->
    <div id="results" class="mt-5">
        <h5>Search Results:</h5>
        <pre id="resultsContent">No results yet.</pre>
    </div>
</div>

<!-- Load jQuery, jQuery UI, and Bootstrap Select -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>

<script>
    $(document).ready(function () {
        console.log("Document Ready!");

        // Initial setup
        setupAutocomplete();
        setupSearchForOptions();

        // Handle search type change
        $('#searchType').change(function () {
            console.log("Search Type Changed: " + $(this).val());
            $('#searchValue').val('');
            $('#dynamicDropdown').empty().append('<option value="">Please select</option>');
            setupAutocomplete();
            setupSearchForOptions();
        });

        // Setup Search For options based on Search Type
        function setupSearchForOptions() {
            let searchType = $('#searchType').val();
            let searchForDropdown = $('#searchFor');
            searchForDropdown.empty();

            if (searchType === 'student') {
                searchForDropdown.append(new Option("Grades", "grades"));
                searchForDropdown.append(new Option("Time Spent on Slides", "timeSpent"));
                searchForDropdown.append(new Option("Number of Slides Viewed", "slidesViewed"));
            } else if (searchType === 'course' || searchType === 'educator') {
                searchForDropdown.append(new Option("Grades", "grades"));
            } else {
                searchForDropdown.append(new Option("Please select", ""));
            }
        }

        // Setup autocomplete based on search type
        function setupAutocomplete() {
            let searchType = $('#searchType').val();
            let url = searchType === 'student' ? '/Report/Report/GetStudentList' :
                      searchType === 'course' ? '/Report/Report/GetCourseList' :
                      '/Report/Report/GetEducatorList';

            $('#searchValue').autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: url,
                        type: 'POST',
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json',
                        data: JSON.stringify({ keyword: request.term }),
                        success: function (data) {
                                response($.map(data, function (item) {
                                let labelText = searchType === 'student'
                                    ? `${item.name} (${item.email})`  
                                    : item.name;  
                                return {
                                    label: labelText,
                                    value: item.id
                                };
                            }));

                        },
                        error: function (xhr, status, error) {
                            console.log("AJAX Error:", error);
                        }
                    });
                },
                select: function (event, ui) {
                    $('#searchValue').val(ui.item.label);
                    $('#selectedId').val(ui.item.value);
                    loadSessions(ui.item.value);
                    return false;
                }
            });
        }

        // Load sessions based on selected type
        function loadSessions(selectedId) {
            let searchType = $('#searchType').val();
            let url = searchType === 'student' ? '/Report/Report/GetSessionsByStudent' :
                      searchType === 'course' ? '/Report/Report/GetSessionsByCourse' :
                      '/Report/Report/GetSessionsByEducator';

            $.ajax({
                url: url,
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                data: JSON.stringify({ id: selectedId }),
                success: function (data) {
                    $('#dynamicDropdown').empty().append('<option value="">Please select</option>');
                    $.each(data, function (index, item) {
                        $('#dynamicDropdown').append(new Option(item.name, item.id));
                    });
                },
                error: function (xhr, status, error) {
                    console.error("Failed to load sessions:", error);
                }
            });
        }

        // Handle Search Button Click
        $('#searchBtn').click(function () {
            let selectedSession = $('#dynamicDropdown').val();
            let searchType = $('#searchType').val();
            let searchFor = $('#searchFor').val();
            let studentId = $('#selectedId').val();

            if (searchType === 'student' && searchFor === 'grades' && selectedSession) {
                fetchGrades(studentId, selectedSession);
            } else {
                $('#resultsContent').text('Please select a session.');
            }
        });

        // Fetch Grades Function
        function fetchGrades(studentId, sessionId) {
            console.log("Grades received:", data);  // Log received data
            console.log("QuizResults:", data.QuizResults);  // Log QuizResults array

            $.ajax({
                url: '/Report/Report/GetStudentGrades',
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                data: JSON.stringify({ Id: sessionId, Keyword: studentId }),
                success: function (data) {
                    let resultsContent = $('#resultsContent');
                    resultsContent.empty();

                    if (data && Array.isArray(data.QuizResults) && data.QuizResults.length > 0) {
                        let gradeTable = `<table class="table table-bordered"><thead><tr><th>Quiz Title</th><th>Score</th><th>Full Marks</th></tr></thead><tbody>`;
                        data.QuizResults.forEach(function (quiz) {
                            gradeTable += `<tr><td>${quiz.QuizTitle}</td><td>${quiz.Score}</td><td>${quiz.FullMarks}</td></tr>`;
                        });
                        gradeTable += `<tr class="font-weight-bold"><td>Total</td><td>${data.TotalScore}</td><td>${data.TotalFullMarks}</td></tr></tbody></table>`;
                        resultsContent.html(gradeTable);
                    } else {
                        resultsContent.text("No grades available for this session.");
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Failed to fetch grades:", error);
                }
            });
        }
    });
</script>
